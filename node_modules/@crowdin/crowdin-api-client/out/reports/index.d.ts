import { CrowdinApi, DownloadLink, ResponseObject, Status } from '../core';
export declare class Reports extends CrowdinApi {
    /**
     * @param projectId project identifier
     * @param request request body
     */
    generateReport(projectId: number, request: ReportsModel.GenerateReportRequest): Promise<ResponseObject<Status<ReportsModel.ReportStatusAttributes>>>;
    /**
     * @param projectId project identifier
     * @param reportId report identifier
     */
    checkReportStatus(projectId: number, reportId: string): Promise<ResponseObject<Status<ReportsModel.ReportStatusAttributes>>>;
    /**
     * @param projectId project identifier
     * @param reportId report identifier
     */
    downloadReport(projectId: number, reportId: string): Promise<ResponseObject<DownloadLink>>;
}
export declare namespace ReportsModel {
    interface GenerateReportRequest {
        name: string;
        schema: CostEstimateSchema | TranslationCostSchema | TopMembersSchema;
    }
    interface ReportStatusAttributes {
        format: Format;
        reportName: string;
        schema: any;
    }
    interface CostEstimateSchema {
        unit: Unit;
        currency: Currency;
        languageId: string;
        format: Format;
        stepTypes: Array<TranslateStep | ProofreadStep>;
    }
    interface TranslationCostSchema {
        unit: Unit;
        currency: Currency;
        format: Format;
        groupBy: GroupBy;
        stepTypes: Array<TranslateStep | ProofreadStep>;
    }
    interface TopMembersSchema {
        unit: Unit;
        languageId: string;
        format: Format;
    }
    enum Unit {
        STRINGS = "strings",
        WORDS = "words",
        CHARS = "chars",
        CHARS_WITH_SPACES = "chars_with_spaces"
    }
    enum Currency {
        USD = "USD",
        EUR = "EUR",
        JPY = "JPY",
        GBP = "GBP",
        AUD = "AUD",
        CAD = "CAD",
        CHF = "CHF",
        CNY = "CNY",
        SEK = "SEK",
        NZD = "NZD",
        MXN = "MXN",
        SGD = "SGD",
        HKD = "HKD",
        NOK = "NOK",
        KRW = "KRW",
        TRY = "TRY",
        RUB = "RUB",
        INR = "INR",
        BRL = "BRL",
        ZAR = "ZAR",
        GEL = "GEL",
        UAH = "UAH"
    }
    enum Format {
        XLSX = "xlsx",
        CSV = "csv"
    }
    interface TranslateStep {
        type: string;
        mode: string;
        calculateInternalFuzzyMatches: boolean;
        regularRates: RegularRates[];
    }
    interface ProofreadStep {
        type: string;
        mode: string;
        regularRates: RegularRates[];
    }
    interface RegularRates {
        mode: Mode;
        value: number;
    }
    enum Mode {
        NO_MATCH = "no_match",
        TM_MATCH = "tm_match"
    }
    enum GroupBy {
        USER = "user",
        LANGUAGE = "language"
    }
}
